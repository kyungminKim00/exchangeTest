openapi: 3.0.3
info:
  title: ALT Exchange API
  version: 1.0.0
  description: |
    Production-ready cryptocurrency exchange API for ALT/USDT trading.
    
    Built with Clean Architecture principles and 93%+ test coverage.
    
    This API provides endpoints for:
    - User and account management
    - Order management (Limit, Market, Stop, OCO orders)
    - Balance and trade history
    - Deposit and withdrawal requests
    - Real-time market data via WebSocket
    - Admin operations with 2-eyes approval workflow
    
    ## Authentication
    All endpoints require JWT authentication via Bearer token in the Authorization header.
    
    ## Rate Limiting
    API calls are rate limited to 100 requests per second per user.
    
    ## WebSocket
    Real-time market data is available via WebSocket connection to `/ws`.
    
    ## Order Types
    - **Limit Orders**: Execute at specified price or better
    - **Market Orders**: Execute immediately at best available price
    - **Stop Orders**: Trigger when price reaches stop level
    - **OCO Orders**: One-Cancels-Other, combines limit and stop orders
    
  contact:
    name: ALT Exchange Support
    email: support@altexchange.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.altexchange.com/v1
    description: Production server
  - url: https://api-dev.altexchange.com/v1
    description: Development server
  - url: http://localhost:8000
    description: Local development server

paths:
  /health:
    get:
      summary: Health check
      description: Check if the API service is healthy
      tags:
        - System
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: healthy
                  service:
                    type: string
                    example: alt-exchange-api
                  timestamp:
                    type: string
                    format: date-time

  /orders:
    post:
      summary: Create a new order
      description: Submit a new trading order
      tags:
        - Orders
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
            examples:
              limit_buy:
                summary: Limit buy order
                value:
                  market: "ALT/USDT"
                  side: "buy"
                  type: "limit"
                  price: "0.123"
                  amount: "100"
                  time_in_force: "GTC"
              market_sell:
                summary: Market sell order
                value:
                  market: "ALT/USDT"
                  side: "sell"
                  type: "market"
                  amount: "50"
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          description: Invalid order parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    get:
      summary: Get user orders
      description: Retrieve orders for the authenticated user
      tags:
        - Orders
      security:
        - bearerAuth: []
      parameters:
        - name: status
          in: query
          description: Filter orders by status
          required: false
          schema:
            $ref: '#/components/schemas/OrderStatus'
        - name: limit
          in: query
          description: Maximum number of orders to return
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
        - name: offset
          in: query
          description: Number of orders to skip
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: List of orders
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrderResponse'
                  total:
                    type: integer
                    description: Total number of orders
                  limit:
                    type: integer
                  offset:
                    type: integer

  /orders/{order_id}:
    get:
      summary: Get order details
      description: Retrieve details of a specific order
      tags:
        - Orders
      security:
        - bearerAuth: []
      parameters:
        - name: order_id
          in: path
          required: true
          description: Order ID
          schema:
            type: integer
      responses:
        '200':
          description: Order details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    delete:
      summary: Cancel order
      description: Cancel an open order
      tags:
        - Orders
      security:
        - bearerAuth: []
      parameters:
        - name: order_id
          in: path
          required: true
          description: Order ID
          schema:
            type: integer
      responses:
        '200':
          description: Order cancelled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          description: Order cannot be cancelled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /balances:
    get:
      summary: Get account balances
      description: Retrieve account balances for all assets
      tags:
        - Account
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Account balances
          content:
            application/json:
              schema:
                type: object
                properties:
                  balances:
                    type: array
                    items:
                      $ref: '#/components/schemas/BalanceResponse'

  /trades:
    get:
      summary: Get trade history
      description: Retrieve trade history for the authenticated user
      tags:
        - Trades
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          description: Maximum number of trades to return
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
        - name: offset
          in: query
          description: Number of trades to skip
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Trade history
          content:
            application/json:
              schema:
                type: object
                properties:
                  trades:
                    type: array
                    items:
                      $ref: '#/components/schemas/TradeResponse'
                  total:
                    type: integer
                    description: Total number of trades

  /withdrawals:
    post:
      summary: Request withdrawal
      description: Request a withdrawal to an external address
      tags:
        - Withdrawals
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WithdrawalRequest'
      responses:
        '202':
          description: Withdrawal request accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WithdrawalResponse'
        '400':
          description: Invalid withdrawal request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /withdrawals/{withdrawal_id}:
    get:
      summary: Get withdrawal status
      description: Get the status of a withdrawal request
      tags:
        - Withdrawals
      security:
        - bearerAuth: []
      parameters:
        - name: withdrawal_id
          in: path
          required: true
          description: Withdrawal ID
          schema:
            type: integer
      responses:
        '200':
          description: Withdrawal status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WithdrawalResponse'

  /orderbook/{market}:
    get:
      summary: Get order book
      description: Get the current order book for a market
      tags:
        - Market Data
      parameters:
        - name: market
          in: path
          required: true
          description: Market pair (e.g., ALT/USDT)
          schema:
            type: string
            example: "ALT/USDT"
        - name: depth
          in: query
          description: Number of price levels to return
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 20
      responses:
        '200':
          description: Order book data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderBookResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token obtained from authentication endpoint

  schemas:
    OrderRequest:
      type: object
      required:
        - market
        - side
        - type
        - amount
      properties:
        market:
          type: string
          description: Trading pair
          example: "ALT/USDT"
        side:
          $ref: '#/components/schemas/Side'
        type:
          $ref: '#/components/schemas/OrderType'
        time_in_force:
          $ref: '#/components/schemas/TimeInForce'
        price:
          type: string
          description: Order price (required for limit orders)
          example: "0.123"
        amount:
          type: string
          description: Order amount
          example: "100"

    OrderResponse:
      type: object
      properties:
        id:
          type: integer
          description: Order ID
        market:
          type: string
        side:
          $ref: '#/components/schemas/Side'
        type:
          $ref: '#/components/schemas/OrderType'
        time_in_force:
          $ref: '#/components/schemas/TimeInForce'
        price:
          type: string
          nullable: true
        amount:
          type: string
        filled:
          type: string
        status:
          $ref: '#/components/schemas/OrderStatus'
        created_at:
          type: string
          format: date-time

    BalanceResponse:
      type: object
      properties:
        asset:
          $ref: '#/components/schemas/Asset'
        available:
          type: string
          description: Available balance
        locked:
          type: string
          description: Locked balance (in orders)

    TradeResponse:
      type: object
      properties:
        id:
          type: integer
        price:
          type: string
        amount:
          type: string
        side:
          $ref: '#/components/schemas/Side'
        created_at:
          type: string
          format: date-time

    WithdrawalRequest:
      type: object
      required:
        - asset
        - amount
        - address
      properties:
        asset:
          $ref: '#/components/schemas/Asset'
        amount:
          type: string
          description: Withdrawal amount
        address:
          type: string
          description: Destination address

    WithdrawalResponse:
      type: object
      properties:
        id:
          type: integer
        status:
          type: string
          enum: [pending, approved, rejected, completed, failed]
        tx_hash:
          type: string
          nullable: true
          description: Blockchain transaction hash

    OrderBookResponse:
      type: object
      properties:
        market:
          type: string
        bids:
          type: array
          description: Buy orders (price, size)
          items:
            type: array
            items:
              type: string
            minItems: 2
            maxItems: 2
        asks:
          type: array
          description: Sell orders (price, size)
          items:
            type: array
            items:
              type: string
            minItems: 2
            maxItems: 2
        timestamp:
          type: string
          format: date-time

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error code
        message:
          type: string
          description: Error message
        details:
          type: object
          description: Additional error details

    # Enums
    Side:
      type: string
      enum: [buy, sell]

    OrderType:
      type: string
      enum: [limit, market]

    OrderStatus:
      type: string
      enum: [open, partial, filled, canceled]

    TimeInForce:
      type: string
      enum: [GTC, IOC, FOK]

    Asset:
      type: string
      enum: [ALT, USDT]

tags:
  - name: System
    description: System health and status
  - name: Orders
    description: Order management
  - name: Account
    description: Account and balance management
  - name: Trades
    description: Trade history
  - name: Withdrawals
    description: Withdrawal management
  - name: Market Data
    description: Market data and order book
